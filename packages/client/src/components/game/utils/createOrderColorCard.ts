import { Color } from "../types/enums";

export default function createOrderColorCard(ctx: CanvasRenderingContext2D, x: number, y: number) {
  ctx.beginPath();
  ctx.fillStyle = Color.black;
  ctx.roundRect(x, y, 80, 120, [10]);
  ctx.fill();
  ctx.beginPath();
  ctx.fillStyle = Color.white;
  ctx.roundRect(x + 1, y + 1, 78, 118, [10]);
  ctx.fill();
  ctx.beginPath();
  ctx.fillStyle = Color.black;
  ctx.roundRect(x + 5, y + 5, 70, 110, [8]);
  ctx.fill();
  ctx.fillStyle = Color.red;
  ctx.beginPath();
  ctx.ellipse(x + 40, y + 60, 24, 42, Math.PI / 4, 0, 2 * Math.PI);
  ctx.fill();
  ctx.fillStyle = Color.blue;
  ctx.beginPath();
  ctx.ellipse(x + 40, y + 60, 18, 35, Math.PI / 4, 0, 2 * Math.PI);
  ctx.fill();
  ctx.fillStyle = Color.yellow;
  ctx.beginPath();
  ctx.ellipse(x + 40, y + 60, 12, 28, Math.PI / 4, 0, 2 * Math.PI);
  ctx.fill();
  ctx.fillStyle = Color.green;
  ctx.beginPath();
  ctx.ellipse(x + 40, y + 60, 6, 20, Math.PI / 4, 0, 2 * Math.PI);
  ctx.fill();
  ctx.fillStyle = Color.red;
  ctx.beginPath();
  ctx.ellipse(x + 20, y + 20, 10, 16, Math.PI / 4, 0, 2 * Math.PI);
  ctx.fill();
  ctx.fillStyle = Color.blue;
  ctx.beginPath();
  ctx.ellipse(x + 20, y + 20, 8, 14, Math.PI / 4, 0, 2 * Math.PI);
  ctx.fill();
  ctx.fillStyle = Color.yellow;
  ctx.beginPath();
  ctx.ellipse(x + 20, y + 20, 6, 12, Math.PI / 4, 0, 2 * Math.PI);
  ctx.fill();
  ctx.fillStyle = Color.green;
  ctx.beginPath();
  ctx.ellipse(x + 20, y + 20, 3, 8, Math.PI / 4, 0, 2 * Math.PI);
  ctx.fill();
  ctx.fillStyle = Color.red;
  ctx.beginPath();
  ctx.ellipse(x + 60, y + 100, 10, 16, Math.PI / 4, 0, 2 * Math.PI);
  ctx.fill();
  ctx.fillStyle = Color.blue;
  ctx.beginPath();
  ctx.ellipse(x + 60, y + 100, 8, 14, Math.PI / 4, 0, 2 * Math.PI);
  ctx.fill();
  ctx.fillStyle = Color.yellow;
  ctx.beginPath();
  ctx.ellipse(x + 60, y + 100, 6, 12, Math.PI / 4, 0, 2 * Math.PI);
  ctx.fill();
  ctx.fillStyle = Color.green;
  ctx.beginPath();
  ctx.ellipse(x + 60, y + 100, 3, 8, Math.PI / 4, 0, 2 * Math.PI);
  ctx.fill();
}
